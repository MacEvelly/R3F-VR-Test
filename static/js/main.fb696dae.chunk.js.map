{"version":3,"sources":["App.js","index.js"],"names":["Floor","rotation","Math","PI","attach","args","color","Box","size","scale","children","rest","mesh","Button","props","useState","hover","setHover","setColor","onSelect","useCallback","random","props2","useSpring","onChange","position","fontSize","anchorX","anchorY","App","Array","from","length","map","v","i","x","y","floor","render","StrictMode","document","getElementById"],"mappings":"wNAOA,SAASA,IACP,OACE,uBAAMC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAAlC,UACE,qCAAqBC,OAAO,WAAWC,KAAM,CAAC,GAAI,MAClD,sCAAsBD,OAAO,WAAWE,MAAM,YAKpD,SAASC,EAAT,GAAmE,IAApDD,EAAmD,EAAnDA,MAAOE,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOR,EAA+B,EAA/BA,SAAUS,EAAqB,EAArBA,SAAaC,EAAQ,8DAChE,OACE,eAAC,IAASC,KAAV,yBAAeH,MAAOA,EAAOR,SAAUA,GAAcU,GAArD,cACE,mCAAmBP,OAAO,WAAWC,KAAMG,IAC3C,mCAAmBJ,OAAO,WAAWE,MAAOA,IAC3CI,MAKP,SAASG,EAAOC,GAAQ,IAAD,EACKC,oBAAS,GADd,mBACdC,EADc,KACPC,EADO,OAEKF,mBAAS,SAFd,mBAEdT,EAFc,KAEPY,EAFO,KAIfC,EAAWC,uBAAY,WAC3BF,EAA0B,SAAhBhB,KAAKmB,SAAuB,KACrC,CAACH,IAEEI,EAASC,YAAU,CAAEd,MAAOO,EAAQ,CAAC,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,GAAIf,SAAUe,EAAQ,CAAC,EAAG,EAAG,GAAK,CAACd,KAAKC,GAAI,EAAG,KAE5G,OACE,cAAC,IAAD,CAAQgB,SAAUA,EAAlB,SACE,cAAC,IAAD,CAAOK,SAAUP,EAAjB,SACE,cAACV,EAAD,yBAAKD,MAAOA,EAAOG,MAAOa,EAAOb,MAAOR,SAAUqB,EAAOrB,SAAUO,KAAM,CAAC,GAAK,GAAK,KAAUM,GAA9F,aACE,cAAC,IAAD,CAAMW,SAAU,CAAC,EAAG,EAAG,KAAOC,SAAU,IAAMpB,MAAM,OAAOqB,QAAQ,SAASC,QAAQ,SAApF,oCAgCKC,MAlBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC7B,EAAD,IACA,iCACA,4BAAYyB,SAAU,CAAC,GAAI,GAAI,MAC/B,cAAC,IAAD,IACCK,MAAMC,KAAK,CAAEC,OAAQ,KAAMC,KAAI,SAACC,EAAGC,GAClC,IAAMC,EAAI,IAAOD,EAAI,EACfE,EAAI,IAAMnC,KAAKoC,MAAMH,EAAI,GAE/B,OAAO,cAACtB,EAAD,CAAQY,SAAU,CAACW,EAAGC,GAAI,YC9DzCE,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb696dae.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { VRCanvas, Hover, Select, DefaultXRControllers, useXREvent } from 'react-xr'\nimport { Sky, Text } from 'drei'\nimport { useSpring, animated } from 'react-spring/three'\nimport './styles.css'\n\n\nfunction Floor() {\n  return (\n    <mesh rotation={[-Math.PI / 2, 0, 0]}>\n      <planeBufferGeometry attach=\"geometry\" args={[40, 40]} />\n      <meshStandardMaterial attach=\"material\" color=\"#666\" />\n    </mesh>\n  )\n}\n\nfunction Box({ color, size, scale, rotation, children, ...rest }) {\n  return (\n    <animated.mesh scale={scale} rotation={rotation} {...rest}>\n      <boxBufferGeometry attach=\"geometry\" args={size} />\n      <meshPhongMaterial attach=\"material\" color={color} />\n      {children}\n    </animated.mesh>\n  )\n}\n\nfunction Button(props) {\n  const [hover, setHover] = useState(false)\n  const [color, setColor] = useState(0x123456)\n\n  const onSelect = useCallback(() => {\n    setColor((Math.random() * 0xffffff) | 0)\n  }, [setColor])\n\n  const props2 = useSpring({ scale: hover ? [3, 3, 3] : [1, 1, 1], rotation: hover ? [0, 0, 0] : [Math.PI, 0, 0] })\n\n  return (\n    <Select onSelect={onSelect}>\n      <Hover onChange={setHover}>\n        <Box color={color} scale={props2.scale} rotation={props2.rotation} size={[0.4, 0.1, 0.1]} {...props}>\n          <Text position={[0, 0, 0.06]} fontSize={0.05} color=\"#000\" anchorX=\"center\" anchorY=\"middle\">\n            Hello react-xr!\n          </Text>\n        </Box>\n      </Hover>\n    </Select>\n  )\n}\n\nfunction Bullet() {\n  const onSqueeze = useCallback(() => console.log('Squeezed'), [])\n  useXREvent('squeeze', () => {})\n}\n\nfunction App() {\n  return (\n    <VRCanvas>\n      <Sky />\n      <Floor />\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <DefaultXRControllers />\n      {Array.from({ length: 25 }).map((v, i) => {\n        const x = 2.5 - (i % 5)\n        const y = 2.5 - Math.floor(i / 5)\n\n        return <Button position={[x, y, -1]} />\n      })}\n    </VRCanvas>\n  )\n}\n\nexport default App;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}